FROM centos:7


ARG TERM=linux

ARG SCIDB_NAME=scidb
ARG SCIDB_LOG_LEVEL=WARN

ENV SCIDB_VER=19.11  \
    SCIDB_NAME=scidb

ENV SCIDB_INSTALL_PATH=/opt/scidb/$SCIDB_VER

ENV PATH=$PATH:$SCIDB_INSTALL_PATH/bin

ARG SCIDB_SCRIPT_URL="https://downloads.paradigm4.com/community/$SCIDB_VER/install-scidb-ce.sh"


## Prep for systemd 1/2
ENV container docker
RUN ( cd /lib/systemd/system/sysinit.target.wants/;                     \
      for i in *;                                                       \
      do [ $i = systemd-tmpfiles-setup.service ] || rm --force $i;      \
      done );                                                           \
    rm --force /etc/systemd/system/*.wants/*;                           \
    rm --force /lib/systemd/system/anaconda.target.wants/*;             \
    rm --force /lib/systemd/system/basic.target.wants/*;                \
    rm --force /lib/systemd/system/local-fs.target.wants/*;             \
    rm --force /lib/systemd/system/multi-user.target.wants/*;           \
    rm --force /lib/systemd/system/sockets.target.wants/*initctl*;      \
    rm --force /lib/systemd/system/sockets.target.wants/*udev*
VOLUME [ "/sys/fs/cgroup" ]


## Install dependencies
RUN yum install --assumeyes                     \
        patch                                   \
        wget                                    \
        which                                   \
    && yum clean all


## Get SciDB install script
RUN wget --no-verbose --output-document /install-scidb-ce.sh "$SCIDB_SCRIPT_URL"


## Run SciDB install script
RUN yes                                         \
    |  bash /install-scidb-ce.sh                \
    && yum install --assumeyes                  \
        scidb-$SCIDB_VER-dev                    \
    && yum clean all


## Setup SSH
RUN echo 'StrictHostKeyChecking no'                        \
    >> /etc/ssh/ssh_config                                 \
    && ssh-keygen -f /root/.ssh/id_rsa -q -N ""            \
    && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys


## Setup SciDB config file
COPY config.ini $SCIDB_INSTALL_PATH/etc/
RUN sed --in-place s/SCIDB_VER/$SCIDB_VER/ $SCIDB_INSTALL_PATH/etc/config.ini


## Setup PostgreSQL and SciDB
RUN echo "127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`                      \
            date +%s | sha256sum | base64 | head -c 32`"                \
    >  /root/.pgpass                                                    \
    && chmod go-r /root/.pgpass                                         \
    && chmod a+r $SCIDB_INSTALL_PATH/etc/config.ini                     \
    && ssh-keygen -A                                                    \
    && /usr/sbin/sshd                                                   \
    && sed --in-place                                                   \
        s/\\.\\.\\.0/172.17.0.0/                                        \
        /var/lib/pgsql/9.3/data/pg_hba.conf                             \
    && su --command="                                                   \
            /usr/pgsql-9.3/bin/pg_ctl start                             \
                -D /var/lib/pgsql/9.3/data/                             \
                -s                                                      \
                -w                                                      \
                -t 300"                                                 \
                postgres                                                \
    && until su --command="/usr/pgsql-9.3/bin/pg_isready" postgres      \
    ;  do sleep 1                                                       \
    ;  done                                                             \
    && su --command="                                                   \
            $SCIDB_INSTALL_PATH/bin/scidbctl.py init-syscat $SCIDB_NAME \
                --db-password `                                         \
                    cut --delimiter : --fields 5  /root/.pgpass`"       \
        postgres                                                        \
    && $SCIDB_INSTALL_PATH/bin/scidbctl.py init-cluster --force         \
        $SCIDB_NAME                                                     \
    && su --command="                                                   \
            /usr/pgsql-9.3/bin/pg_ctl stop                              \
                -D /var/lib/pgsql/9.3/data/                             \
                -s                                                      \
                -m fast"                                                \
                postgres                                                \
    && sed --in-place                                                   \
        s/log4j.rootLogger=INFO/log4j.rootLogger=$SCIDB_LOG_LEVEL/      \
        $SCIDB_INSTALL_PATH/share/scidb/log4cxx.properties


## Setup container entrypoint
COPY docker-entrypoint-centos-7.sh /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]


## Port | App
## -----+-----
## 1239 | SciDB iquery
EXPOSE 1239


## Prep for systemd 2/2
RUN rm /lib/systemd/system/sysinit.target.wants/sys-fs-fuse-connections.mount; \
    rm /etc/systemd/system/multi-user.target.wants/postfix.service


## Install dependencies
RUN wget --no-verbose https://bootstrap.pypa.io/get-pip.py      \
    && python get-pip.py                                        \
    && pip install scidb-strm


## Install Paradigm4 plug-ins
RUN wget --output-document=-                                    \
        https://paradigm4.github.io/extra-scidb-libs/install.sh \
    |  sh


## Load plug-ins
## Re-create ".pgpass" file due to hard links created by Docker Hub
RUN cp /root/.pgpass /root/.pgpass.bk                                   \
    && mv /root/.pgpass.bk /root/.pgpass                                \
    && /usr/sbin/sshd                                                   \
    && sed --in-place                                                   \
        s/\\.\\.\\.0/172.17.0.0/                                        \
        /var/lib/pgsql/9.3/data/pg_hba.conf                             \
    && su --command="                                                   \
            /usr/pgsql-9.3/bin/pg_ctl start                             \
                -D /var/lib/pgsql/9.3/data/                             \
                -s                                                      \
                -w                                                      \
                -t 300"                                                 \
                postgres                                                \
    && until su --command="/usr/pgsql-9.3/bin/pg_isready" postgres      \
    ;  do sleep 1                                                       \
    ;  done                                                             \
    && $SCIDB_INSTALL_PATH/bin/scidbctl.py start $SCIDB_NAME            \
    && iquery --afl --query                                             \
        "load_library('accelerated_io_tools');                          \
         load_library('equi_join');                                     \
         load_library('grouped_aggregate');                             \
         load_library('stream');                                        \
         load_library('superfunpack')"                                  \
    && $SCIDB_INSTALL_PATH/bin/scidbctl.py stop $SCIDB_NAME             \
    && su --command="                                                   \
            /usr/pgsql-9.3/bin/pg_ctl stop                              \
                -D /var/lib/pgsql/9.3/data/                             \
                -s                                                      \
                -m fast"                                                \
                postgres


## Update Shim conf to use aio
RUN echo aio=1            \
    >> /var/lib/shim/conf
